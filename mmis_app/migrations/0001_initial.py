# Generated by Django 4.1.2 on 2022-10-22 00:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('respondent', 'Respondent')], max_length=10, null=True)),
                ('sector', models.CharField(choices=[('MAP', 'Mercury Added Products'), ('health', 'Environment & Health'), ('ASGM', 'Artisanal and Small Scale Gold Mining'), ('cement', 'Cement'), ('waste', 'Waste'), ('eAndF', 'Energy & Fuel')], max_length=100, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=6, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ASGMining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Cement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fname', models.CharField(max_length=50, verbose_name='First Name')),
                ('Mname', models.CharField(blank=True, max_length=50, verbose_name='Middle Name')),
                ('Sname', models.CharField(max_length=50, verbose_name='Surname Name')),
                ('contact', models.CharField(max_length=150, verbose_name="Organization's Name")),
                ('ContactPhone', models.IntegerField(verbose_name='Mobile Number (Contact Person)')),
                ('OrganizationPhone', models.IntegerField(verbose_name='Phone Number (Organization)')),
                ('Alternate_mobile', models.IntegerField(blank=True, verbose_name='Alternate mobile number')),
                ('Full_address', models.TextField(max_length=250, verbose_name="Organization's Address")),
                ('email', models.EmailField(max_length=200, verbose_name="Organization's email address")),
                ('Web_page', models.CharField(blank=True, max_length=50, verbose_name='Web address')),
            ],
        ),
        migrations.CreateModel(
            name='EnergyConsumptionAndFuelProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentAndHealth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MercurySupplySource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MercuryAddedProducts',
            fields=[
                ('map_id', models.IntegerField(primary_key=True, serialize=False)),
                ('mercury_compound', models.CharField(choices=[('Mercury Product', 'Mercury Product'), ('Commodity Chemical', 'Commodity Chemical'), ('Disposed Mercury Products', 'Disposed Mercury Products'), ('Thermometers', 'Thermometers'), ('Light Fittings', 'Light Fittings'), ('Cosmetics', 'Cosmetics'), ('Batteries', 'Batteries'), ('Paint', 'Paint'), ('Polyurethane', 'Polyurethane')], default='', max_length=300, null=True)),
                ('item', models.CharField(max_length=250)),
                ('imported', models.CharField(max_length=200)),
                ('consumption_or_production', models.CharField(max_length=200)),
                ('year', models.DateField(max_length=4)),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
